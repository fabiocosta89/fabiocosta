name: .NET Alwaysdata

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    environment: Production

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: App Settings Variable Substitution
      uses: microsoft/variable-substitution@v1
      with:
        files: ${{ secrets.APPSETTINGS_PATH }}
      env:
        ConnectionStrings.Database: ${{ secrets.CONNECTIONSTRING_DATABASE_POSTGRE }}
        Captcha.ValidationUrl: ${{ secrets.CAPTCHA_VALIDATION_URL }}
        Captcha.SiteKey: ${{ secrets.CAPTCHA_SITEKEY }}
        Captcha.SecretKey: ${{ secrets.CAPTCHA_SECRETKEY }}
        Newsletter.Code: ${{ secrets.NEWSLETTER_CODE }}
        Newsletter.Url: ${{ secrets.NEWSLETTER_URL }}
        Umami.Id: ${{ secrets.UMAMI_ID }}
        Umami.Url: ${{ secrets.UMAMI_URL }}
        Sentry.Dsn: ${{ secrets.SENTRY_DSN }}
    - name: dotnet publish
      run: dotnet publish -c Release --no-restore --no-build --sc true -f net7.0 -r linux-x64 -p:UseAppHost=false -o ./Release/
    - name: FTP Deploy
      uses: sebastianpopp/ftp-action@v2.0.0
      with:
        # FTP host
        host: ${{ secrets.FTP_SERVER }}
        # FTP user
        user: ${{ secrets.FTP_USERNAME }}
        # FTP password
        password: ${{ secrets.FTP_PASSWORD }}
        # Force SSL encryption
        forceSsl: true
        # Local directory
        localDir: ./Release/